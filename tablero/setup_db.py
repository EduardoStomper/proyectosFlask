#!/usr/bin/env python3
"""
Script para configurar la base de datos PostgreSQL
Ejecutar despu√©s de crear la base de datos manualmente
"""

import psycopg2
import sys
import os
from config import Config

def test_connection():
    """Probar conexi√≥n a la base de datos"""
    try:
        conn = psycopg2.connect(
            host=Config.DATABASE_HOST,
            port=Config.DATABASE_PORT,
            database=Config.DATABASE_NAME,
            user=Config.DATABASE_USER,
            password=Config.DATABASE_PASSWORD
        )
        conn.close()
        print("‚úÖ Conexi√≥n a PostgreSQL exitosa")
        return True
    except Exception as e:
        print(f"‚ùå Error conectando a PostgreSQL: {e}")
        return False

def run_sql_script():
    """Ejecutar el script SQL para crear las tablas"""
    try:
        # Leer el archivo SQL
        with open('database.sql', 'r', encoding='utf-8') as file:
            sql_script = file.read()
        
        # Conectar y ejecutar
        conn = psycopg2.connect(
            host=Config.DATABASE_HOST,
            port=Config.DATABASE_PORT,
            database=Config.DATABASE_NAME,
            user=Config.DATABASE_USER,
            password=Config.DATABASE_PASSWORD
        )
        
        cursor = conn.cursor()
        
        # Ejecutar el script completo
        cursor.execute(sql_script)
        conn.commit()
        
        cursor.close()
        conn.close()
        
        print("‚úÖ Script SQL ejecutado correctamente")
        print("‚úÖ Tablas creadas y datos iniciales insertados")
        return True
        
    except Exception as e:
        print(f"‚ùå Error ejecutando script SQL: {e}")
        return False

def verify_installation():
    """Verificar que las tablas se crearon correctamente"""
    try:
        conn = psycopg2.connect(
            host=Config.DATABASE_HOST,
            port=Config.DATABASE_PORT,
            database=Config.DATABASE_NAME,
            user=Config.DATABASE_USER,
            password=Config.DATABASE_PASSWORD
        )
        
        cursor = conn.cursor()
        
        # Verificar tablas principales
        cursor.execute("""
            SELECT table_name 
            FROM information_schema.tables 
            WHERE table_schema = 'public' 
            AND table_type = 'BASE TABLE'
            ORDER BY table_name
        """)
        
        tables = cursor.fetchall()
        expected_tables = [
            'categories', 'questions', 'question_options', 'teams',
            'game_sessions', 'session_teams', 'question_responses'
        ]
        
        print("\nüìã Tablas creadas:")
        for table in tables:
            table_name = table[0]
            status = "‚úÖ" if table_name in expected_tables else "‚ÑπÔ∏è"
            print(f"  {status} {table_name}")
        
        # Verificar datos iniciales
        cursor.execute("SELECT COUNT(*) FROM categories")
        categories_count = cursor.fetchone()[0]
        
        cursor.execute("SELECT COUNT(*) FROM questions")
        questions_count = cursor.fetchone()[0]
        
        cursor.execute("SELECT COUNT(*) FROM teams")
        teams_count = cursor.fetchone()[0]
        
        print(f"\nüìä Datos iniciales:")
        print(f"  üìÇ Categor√≠as: {categories_count}")
        print(f"  ‚ùì Preguntas: {questions_count}")
        print(f"  üë• Equipos: {teams_count}")
        
        cursor.close()
        conn.close()
        
        return True
        
    except Exception as e:
        print(f"‚ùå Error verificando instalaci√≥n: {e}")
        return False

def main():
    print("üöÄ Configurando base de datos PostgreSQL para el sistema de preguntas...")
    print(f"üì° Conectando a: {Config.DATABASE_HOST}:{Config.DATABASE_PORT}/{Config.DATABASE_NAME}")
    
    # Verificar archivo .env
    if not os.path.exists('.env'):
        print("‚ö†Ô∏è  Archivo .env no encontrado")
        print("üìù Copia .env.example a .env y configura tus credenciales de PostgreSQL")
        return False
    
    # Paso 1: Probar conexi√≥n
    if not test_connection():
        print("\nüí° Instrucciones:")
        print("1. Aseg√∫rate de que PostgreSQL est√© instalado y ejecut√°ndose")
        print("2. Crea la base de datos manualmente:")
        print(f"   CREATE DATABASE {Config.DATABASE_NAME};")
        print("3. Configura las credenciales en el archivo .env")
        return False
    
    # Paso 2: Ejecutar script SQL
    print("\nüîß Ejecutando script SQL...")
    if not run_sql_script():
        return False
    
    # Paso 3: Verificar instalaci√≥n
    print("\nüîç Verificando instalaci√≥n...")
    if not verify_installation():
        return False
    
    print("\nüéâ ¬°Base de datos configurada correctamente!")
    print("üöÄ Ya puedes ejecutar la aplicaci√≥n con: python app.py")
    
    return True

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)